# Continuous Integration Tests for Todo Notes Tracker

name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test-rust:
    name: Test Rust Backend
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
      
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Cache cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: src-tauri/target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Run Rust tests
      working-directory: src-tauri
      env:
        DISPLAY: ":99"
        TAURI_SKIP_ICON_GENERATION: "true"
        CI: "true"
      run: |
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 &
        sleep 3
        cargo test --verbose
      
    - name: Check Rust formatting
      working-directory: src-tauri
      env:
        TAURI_SKIP_ICON_GENERATION: "true"
        CI: "true"
      run: cargo fmt --check
      
    - name: Run Rust linter
      working-directory: src-tauri
      env:
        TAURI_SKIP_ICON_GENERATION: "true"
        CI: "true"
      run: cargo clippy --tests -- -W clippy::all -A clippy::too_many_arguments

  test-javascript:
    name: Test JavaScript Frontend
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Check JavaScript syntax
      run: |
        for file in ui/*.js; do
          echo "Checking $file"
          node -c "$file"
        done
        
    - name: Check HTML files
      run: |
        # Basic HTML validation - check for proper structure
        for file in ui/*.html; do
          echo "Checking $file"
          # Check for basic HTML structure
          grep -q "<!DOCTYPE html>" "$file" || (echo "Missing DOCTYPE in $file" && exit 1)
          grep -q "<html" "$file" || (echo "Missing html tag in $file" && exit 1)
          grep -q "</html>" "$file" || (echo "Missing closing html tag in $file" && exit 1)
        done

  build-tauri:
    name: Build Tauri Application
    runs-on: ubuntu-latest
    needs: [test-rust, test-javascript]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
      
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf xvfb
        
    - name: Cache cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          src-tauri/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Build Tauri app
      working-directory: src-tauri
      run: cargo build --release